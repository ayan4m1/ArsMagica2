def parseConfig(File config) {
    config.withReader {
        def prop = new Properties()
        prop.load(it)
        return (new ConfigSlurper().parse(prop))
    }
}

buildscript {
    repositories {
        jcenter()

        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }

        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }

    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'com.matthewprenger:CurseGradle:1.0-SNAPSHOT'
    }
}

repositories {
    maven {
        url = "http://dvs1.progwml6.com/files/maven"
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'com.matthewprenger.cursegradle'
apply plugin: 'maven-publish'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

ext.configFile = file('build.properties')
ext.config = parseConfig(ext.configFile)
ext.apiKeyFile = file('build-key.properties')
ext.apiKeyConfig = parseConfig(ext.apiKeyFile)

group = "com.arsmagica"
version = config.version
archivesBaseName = "ArsMagica2"

minecraft {
    version = "1.12.2-14.23.5.2823"
    runDir = "run"
    replace 'GRADLE:BUILD', config.build_number
    replace 'GRADLE:VERSION', config.version
    replaceIn 'ArsMagica2.java'
    mappings = "snapshot_20171003"
}

jar {
    manifest {
        attributes 'FMLCorePlugin': 'am2.common.asm.Preloader'
        attributes 'FMLCorePluginContainsFMLMod': 'true'
    }
}

dependencies {
    deobfCompile "mezz.jei:jei_${config.mcversion}:${config.jei_version}:api"
    runtime "mezz.jei:jei_${config.mcversion}:${config.jei_version}"
}

processResources {
    // this will ensure that this task is redone when the versions change
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything that's not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    archiveName = "${baseName}-${version}.jar"
}

curseforge {
    apiKey = apiKeyConfig.curse_forge_api_key
    project {
        id = config.curse_forge_id
        changelog = file('CHANGELOG.md')
        releaseType = 'alpha'
    }
}

defaultTasks 'clean', 'build'
